{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///src/app/recipes/recipe-list/recipe-list.component.html","webpack:///src/app/recipes/recipe-model.ts","webpack:///src/app/recipes/recipe.service.ts","webpack:///src/app/recipes/recipes.component.ts","webpack:///src/app/recipes/recipes.component.html","webpack:///src/app/shared/dropdown.directive.ts","webpack:///src/app/shared/ingredient.model.ts","webpack:///src/app/shopping-list/shopping-edit/shopping-edit.component.ts","webpack:///src/app/shopping-list/shopping-edit/shopping-edit.component.html","webpack:///src/app/shopping-list/shopping-list.component.ts","webpack:///src/app/shopping-list/shopping-list.component.html","webpack:///src/app/shopping-list/shopping-list.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","loadedFeature","feature","onNavigate","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","HeaderComponent","featureSelected","emit","onSelect","RecipeDetailComponent","recipeService","addIngredientsToShoppingList","recipe","ingredients","onAddToShoppingList","RecipeItemComponent","selectedRecipe","onSelected","RecipeListComponent","recipes","getRecipes","Recipe","name","description","imagePath","RecipeService","slService","slice","addIngredients","RecipesComponent","subscribe","DropDownDirective","elRef","isOpen","nativeElement","contains","event","target","Ingredient","amount","ShoppingEditComponent","itemName","nameInputRef","value","itemAmount","amountInputRef","item","addIngredient","onAddItem","ShoppingListComponent","getIngredients","ingredientsChanged","ShoppingListService","ingredient","push","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  loadedFeature: string = 'recipe';\n  onNavigate(feature:string) {\n    this.loadedFeature = feature;\n  }\n}\n","<app-header (featureSelected)=\"onNavigate($event)\"></app-header>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <app-recipes *ngIf=\"loadedFeature === 'recipe' \"></app-recipes>\n      <app-shopping-list *ngIf=\"loadedFeature !== 'recipe'\"></app-shopping-list>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {HeaderComponent} from './header/header.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { ShoppingEditComponent } from './shopping-list/shopping-edit/shopping-edit.component';\nimport {DropDownDirective} from './shared/dropdown.directive';\nimport { ShoppingListService } from './shopping-list/shopping-list.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent,\n    ShoppingListComponent,\n    ShoppingEditComponent,\n    DropDownDirective\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [ShoppingListService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, Output} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: 'header.component.html'\r\n})\r\nexport class HeaderComponent {\r\n    @Output() featureSelected = new EventEmitter<string>();\r\n    onSelect(feature: string) {\r\n        this.featureSelected.emit(feature);\r\n    }\r\n}","<nav class=\"navbar navbar-default\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <a href=\"#\" class=\"navbar-brand\">Recipe Book</a>\r\n        </div>\r\n        <div class=\"collapse navbar-collapse\">\r\n            <ul class=\"nav navbar-nav\">\r\n                <li><a href=\"#\" (click)=\"onSelect('recipe')\">Recipes</a></li>\r\n                <li><a href=\"#\" (click)=\"onSelect('shopping-list')\">Shopping List</a></li>\r\n            </ul>\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li class=\"dropdown\" appDropdown>\r\n                    <a href=\"#\" class=\"dropdown-toogle\" role=\"button\">Manage<span class=\"caret\"></span></a>\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li><a href=\"#\">Save Data</a></li>\r\n                        <li><a href=\"#\">Fetch Data</a></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Recipe } from '../recipe-model';\r\nimport { RecipeService } from '../recipe.service';\r\n\r\n@Component({\r\n  selector: 'app-recipe-detail',\r\n  templateUrl: './recipe-detail.component.html',\r\n  styleUrls: ['./recipe-detail.component.css']\r\n})\r\nexport class RecipeDetailComponent implements OnInit {\r\n @Input() recipe: Recipe;\r\n  constructor(private recipeService: RecipeService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onAddToShoppingList() {\r\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\r\n  }\r\n}\r\n","<div class=\"row\">\n    <div class= \"col-xs-12\">\n        <img src=\"{{recipe.imagePath}}\" alt=\"{{recipe.name}}\" class=\"img-responsive\" sytle=\"max-height: 300px;\">\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <h1>{{recipe.name}}</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <div class=\"btn-group\" appDropdown>\n            <button type=\"button\" class=\"btn btn-primary dropdown-toggle\">\n                Manage Recipe <span class=\"caret\"></span>\n            </button>\n            <ul class=\"dropdown-menu\">\n                <li><a (click)=\"onAddToShoppingList()\">To Shopping List</a></li>\n                <li><a href=\"#\">Edit Recipe</a></li>\n                <li><a href=\"#\">Delete Recipe</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        {{recipe.description}}\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <li class=\"list-group-item\"\n        *ngFor=\"let ingredient of recipe.ingredients\">\n    {{ingredient.name}} - {{ingredient.amount}}\n    </li>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../../recipe-model';\nimport { RecipeService } from '../../recipe.service';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe ;\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSelected() {\n    this.recipeService.selectedRecipe.emit(this.recipe);\n  }\n}\n","<a href=\"#\" class=\"list-group-item clearfix\" (click)='onSelected()'>\n    <div class=\"pull-left\">\n        <h4 class=\"list-group-item-heading\">{{recipe.name}}</h4>\n        <p class=\"list-group-item-text\">{{recipe.description}}</p>\n    </div>\n    <span class=\"pull-right\">\n        <img src=\"{{recipe.imagePath}}\" alt=\"{{recipe.name}}\" class=\"img-responsive\" style=\"max-height: 50px;\">\n    </span>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport {Recipe} from '../../recipes/recipe-model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit {\nrecipes: Recipe[];\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.recipes = this.recipeService.getRecipes();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <button class=\"btn btn-success\">New Recipe</button>\n    </div>\n</div>\n<hr/>\n<div class=\"row\">\n    <div class=\"col-xs-12\" >\n        <app-recipe-item *ngFor=\"let recipeEl of recipes\"\n        [recipe]=\"recipeEl\"></app-recipe-item>\n    </div>\n</div>","import { Ingredient } from '../shared/ingredient.model';\r\n\r\nexport class Recipe {\r\n    public name: string;\r\n    public description: string;\r\n    public imagePath: string;\r\n    public ingredients: Ingredient[];\r\n    constructor(name: string, description: string, imagePath: string, ingredients: Ingredient[]) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.imagePath = imagePath;\r\n        this.ingredients = ingredients;\r\n    }\r\n}","import { Recipe } from './recipe-model';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { Ingredient } from '../shared/ingredient.model';\r\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\r\n@Injectable()\r\nexport class RecipeService {\r\n    selectedRecipe = new EventEmitter<Recipe>();\r\n    private recipes: Recipe[] = [\r\n        new Recipe( \"Chicken Recipe\", \r\n        \"Authentic south asian recipe\",\r\n        \"https://c1.wallpaperflare.com/preview/992/474/505/food-meat-recipe-power.jpg\",\r\n        [\r\n            new Ingredient(\"Chicken\", 1),\r\n            new Ingredient(\"Lemon\", 5)\r\n        ]),\r\n        new Recipe( \"Pickled Garlic\", \r\n        \"A delicious pickle recipe\",\r\n        \"https://live.staticflickr.com/5836/30219331242_56aa4dfca9_b.jpg\",\r\n        [\r\n            new Ingredient(\"Garlic\", 50),\r\n            new Ingredient(\"Vinegar\", 500)\r\n        ])\r\n      ];\r\n\r\n      constructor(private slService: ShoppingListService) {}\r\n      getRecipes(){\r\n          return this.recipes.slice();\r\n      }\r\n\r\n      addIngredientsToShoppingList(ingredients: Ingredient[]) {\r\n        this.slService.addIngredients(ingredients)\r\n      }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from './recipe-model';\nimport { RecipeService } from './recipe.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css'],\n  providers: [RecipeService]\n})\nexport class RecipesComponent implements OnInit {\n  selectedRecipe: Recipe;\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.recipeService.selectedRecipe.subscribe((recipe)=>{\n      this.selectedRecipe = recipe;\n    })\n  }\n\n}\n","<div class=\"row\" >\n    <div class=\"col-md-5\">\n      <app-recipe-list ></app-recipe-list>\n    </div>\n    <div class=\"col-md-7\">\n      <app-recipe-detail\n      *ngIf=\"selectedRecipe; else infoText\" [recipe]=\"selectedRecipe\" ></app-recipe-detail>\n    <ng-template #infoText>\n      Please select a recipe\n    </ng-template>\n    </div>\n  </div>\n  ","import { Directive, HostListener, HostBinding, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: \"[appDropdown]\"\r\n})\r\nexport class DropDownDirective{\r\n    @HostBinding('class.open') isOpen = false\r\n    @HostListener('document:click') toggleOpen(){\r\n        this.isOpen = this.elRef.nativeElement.contains(event.target) ? !this.isOpen : false;\r\n    }\r\n    constructor(private elRef: ElementRef){}\r\n}","export class Ingredient {\r\n    constructor(public name:string, public amount: number) {}\r\n}","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit {\n  @ViewChild('nameInput') nameInputRef: ElementRef;\n  @ViewChild('amountInput') amountInputRef: ElementRef;\n  constructor(private slService: ShoppingListService) { }\n\n  ngOnInit(): void {\n  }\n  onAddItem() {\n    const itemName = this.nameInputRef.nativeElement.value;\n    const itemAmount = this.amountInputRef.nativeElement.value;\n    const item = new Ingredient(itemName, itemAmount);\n    this.slService.addIngredient(item);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form>\n            <div class=\"row\">\n                <div class=\"col-sm-5 form-group\">\n                    <label for=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\" id=\"name\" class=\"form-control\" #nameInput>\n                </div>\n                <div class=\"col-sm-2 form-group\">\n                    <label for=\"amount\">Amount</label>\n                    <input type=\"text\" id=\"amount\" class=\"form-control\" #amountInput>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12 btn-toolbar\">\n                    <button class=\"btn btn-success\" type=\"button\" (click)=\"onAddItem()\">Add</button>\n                    <button class=\"btn btn-danger\" type=\"button\">Delete</button>\n                    <button class=\"btn btn-primary\" type=\"button\">Clear</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from './shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit {\n  ingredients: Ingredient[];\n  constructor(private slService: ShoppingListService) { }\n\n  ngOnInit(): void {\n    this.ingredients = this.slService.getIngredients();\n    this.slService.ingredientsChanged.subscribe((ingredients: Ingredient[])=>{\n      this.ingredients = ingredients;\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-10\">\n        <app-shopping-edit></app-shopping-edit>\n        <hr/>\n        <ul class=\"list-group\">\n            <a class=\"list-group-item\" \n            style=\"cursor: pointer\"\n            *ngFor=\"let ingredient of ingredients\">\n                {{ingredient.name}} ({{ingredient.amount}})\n            </a>\n        </ul>\n    </div>\n</div>\n","import { Ingredient } from '../shared/ingredient.model';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class ShoppingListService {\r\n    ingredientsChanged = new EventEmitter<Ingredient[]>();\r\n    private ingredients: Ingredient[] = [\r\n        new Ingredient('Apples', 5),\r\n        new Ingredient('Tomatoes', 10)\r\n    ];\r\n\r\n    getIngredients() {\r\n        return this.ingredients.slice();\r\n    }\r\n\r\n    addIngredient(ingredient: Ingredient) {\r\n        this.ingredients.push(ingredient);\r\n        this.ingredientsChanged.emit(this.ingredients);\r\n    }\r\n\r\n    addIngredients(ingredients: Ingredient[]) {\r\n        this.ingredients.push(...ingredients);\r\n        this.ingredientsChanged.emit(this.ingredients);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}